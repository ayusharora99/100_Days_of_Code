{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3","program":"/Users/AyushArora/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","adler32","/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=a7b3d939c8560e90","-C","extra-filename=-a7b3d939c8560e90","--out-dir","/Users/AyushArora/Documents/100_Days_of_Code/100_Days_of_Code/Rust/target/rls/debug/deps","-L","dependency=/Users/AyushArora/Documents/100_Days_of_Code/100_Days_of_Code/Rust/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/AyushArora/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/AyushArora/Documents/100_Days_of_Code/100_Days_of_Code/Rust/target/rls/debug/deps/libadler32-a7b3d939c8560e90.rmeta"},"prelude":{"crate_id":{"name":"adler32","disambiguator":[8413575013233208257,5688693866463502924]},"crate_root":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src","external_crates":[{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8106311790213343624,8955386895799845337]}},{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[4005401412862751838,10428951584609828155]}},{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13095010483096482717,4206053056286564539]}},{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11763715825204258428,844497751288077839]}},{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12828643918913867774,11782824976344281294]}},{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6904254435091247090,18371361969673227101]}},{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4378847577036072991,15026153357663168629]}},{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11052382395475291102,13781871357446175268]}},{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[10846364115163072086,995811513296267536]}},{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5237820243614741634,12979549998808708609]}},{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[9343187026477242795,15227309607718994713]}},{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[7288168950848637900,4057641189599078398]}},{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[10668628030226272726,236080469054931654]}},{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[8067095231028320138,1808744449370434750]}}],"span":{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","byte_start":0,"byte_end":9451,"line_start":1,"line_end":301,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","byte_start":0,"byte_end":9451,"line_start":1,"line_end":301,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":31}],"decl_id":null,"docs":" A minimal implementation of Adler32 for Rust.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20},"span":{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","byte_start":2931,"byte_end":2945,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"RollingAdler32","qualname":"::RollingAdler32","value":"RollingAdler32 {  }","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":22}],"decl_id":null,"docs":" A rolling version of the Adler32 hash, which can 'forget' past bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","byte_start":3064,"byte_end":3067,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<RollingAdler32>::new","value":"fn () -> RollingAdler32","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty Adler32 context (with hash 1).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","byte_start":3201,"byte_end":3211,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"from_value","qualname":"<RollingAdler32>::from_value","value":"fn (adler32: u32) -> RollingAdler32","parent":null,"children":[],"decl_id":null,"docs":" Creates an Adler32 context with the given initial value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","byte_start":3446,"byte_end":3457,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"from_buffer","qualname":"<RollingAdler32>::from_buffer","value":"fn (buffer: &[u8]) -> RollingAdler32","parent":null,"children":[],"decl_id":null,"docs":" Convenience function initializing a context from the hash of a buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","byte_start":3640,"byte_end":3644,"line_start":113,"line_end":113,"column_start":12,"column_end":16},"name":"hash","qualname":"<RollingAdler32>::hash","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the current hash.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","byte_start":3792,"byte_end":3798,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"remove","qualname":"<RollingAdler32>::remove","value":"fn (&mut self, size: usize, byte: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes the given `byte` that was fed to the algorithm `size` bytes ago.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","byte_start":4172,"byte_end":4178,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"update","qualname":"<RollingAdler32>::update","value":"fn (&mut self, byte: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Feeds a new `byte` to the algorithm to update the hash.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","byte_start":4405,"byte_end":4418,"line_start":134,"line_end":134,"column_start":12,"column_end":25},"name":"update_buffer","qualname":"<RollingAdler32>::update_buffer","value":"fn (&mut self, buffer: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Feeds a vector of bytes to the algorithm to update the hash.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":31},"span":{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","byte_start":5971,"byte_end":5978,"line_start":188,"line_end":188,"column_start":8,"column_end":15},"name":"adler32","qualname":"::adler32","value":"fn <R> (mut reader: R) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Consume a Read object and returns the Adler32 hash.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","byte_start":2980,"byte_end":2994,"line_start":92,"line_end":92,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/AyushArora/.cargo/registry/src/github.com-1ecc6299db9ec823/adler32-1.0.3/src/lib.rs","byte_start":2980,"byte_end":2994,"line_start":92,"line_end":92,"column_start":6,"column_end":20},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":20},"to":{"krate":4294967295,"index":4294967295}}]}